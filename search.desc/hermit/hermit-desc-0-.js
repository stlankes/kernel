searchState.loadedDescShard("hermit", 0, "First version is derived and adapted for Hermit from …\nArchitecture-specific architecture abstraction.\nPrints and returns the value of a given expression for …\nEmergency output.\nPrints to the standard output.\nPrints to the standard output, with a newline.\nA standard 4KiB page.\nA string representation of the page size for debug output.\nTrait for abstracting over the three possible page sizes …\nThe page size in bytes.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nArgument list too long\nPermission denied\nAddress already in use\nCannot assign requested address\nAdvertise error\nAddress family not supported by protocol\nTry again\nOperation already in progress\nInvalid exchange\nBad file number\nFile descriptor in bad state\nNot a data message\nInvalid request descriptor\nInvalid request code\nInvalid slot\nBad font file format\nDevice or resource busy\nOperation Canceled\nNo child processes\nChannel number out of range\nCommunication error on send\nSoftware caused connection abort\nConnection refused\nConnection reset by peer\nResource deadlock would occur\nDestination address required\nMath argument out of domain of func\nRFS specific error\nQuota exceeded\nFile exists\nBad address\nFile too large\nHost is down\nNo route to host\nRobust mutexes: Memory page has hardware error\nIdentifier removed\nIllegal byte sequence\nOperation now in progress\nInterrupted system call\nInvalid argument\nI/O error\nTransport endpoint is already connected\nIs a directory\nIs a named type file\nKey has expired\nKey was rejected by service\nKey has been revoked\nLevel 2 halted\nLevel 2 not synchronized\nLevel 3 halted\nLevel 3 reset\nCan not access a needed shared library\nAccessing a corrupted shared library\nCannot exec a shared library directly\nAttempting to link in too many shared libraries\n.lib section in a.out corrupted\nLink number out of range\nToo many symbolic links encountered\nWrong medium type\nToo many open files\nToo many links\nMessage too long\nMultihop attempted\nFile name too long\nNo XENIX semaphores available\nNetwork is down\nNetwork dropped connection because of reset\nNetwork is unreachable\nFile table overflow\nNo anode\nNo buffer space available\nNo CSI structure available\nNo data available\nNo such device\nNo such file or directory\nExec format error\nRequired key not available\nNo record locks available\nLink has been severed\nNo medium found\nOut of memory\nNo message of desired type\nMachine is not on the network\nPackage not installed\nProtocol not available\nNo space left on device\nOut of streams resources\nDevice not a stream\nFunction not implemented\nBlock device required\nTransport endpoint is not connected\nNot a directory\nDirectory not empty\nNot a XENIX named type file\nRobust mutexes: State not recoverable\nSocket operation on non-socket\nNot a typewriter\nName not unique on network\nNo such device or address\nOperation not supported on transport endpoint\nValue too large for defined data type\nRobust mutexes: Owner died\nOperation not permitted\nProtocol family not supported\nBroken pipe\nProtocol error\nProtocol not supported\nProtocol wrong type for socket\nMath result not representable\nRemote address changed\nObject is remote\nRemote I/O error\nInterrupted system call should be restarted\nRobust mutexes: Operation not possible due to RF-kill\nRead-only file system\nCannot send after transport endpoint shutdown\nSocket type not supported\nIllegal seek\nNo such process\nSrmount error\nStale file handle\nStreams pipe error\nTimer expired\nConnection timed out\nToo many references: cannot splice\nText file busy\nStructure needs cleaning\nProtocol driver not attached\nToo many users\nOperation would block\nCross-device link\nExchange full\nGet the error number from the thread local storage\nReturns the pointer to <code>errno</code>.\nGet the error number from the thread local storage\nOptions for opening files\nFile status flags.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nWait for some event on a file descriptor.\nevents to look for\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nfile descriptor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWait for some event on a file descriptor.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nevents returned\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the last modification time listed in this metadata.\nCreates a new file in read-write mode; error if the file …\nCreates a new, empty directory at the provided path\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this metadata is for a directory.\nReturns true if this metadata is for a file.\nReturns the size of the file, in bytes\nGiven a path, query the file system to get information …\nReturns the last modification time listed in this metadata.\nAttempts to open a file in read-write mode.\nReturns an vector with all the entries within a directory.\nRemoves an empty directory.\ntime of last access\nblock size\nsize in blocks\ntime of last status change\ngroup id\naccess permissions\ntime of last modification\ndevice id\nsize in bytes\nuser id\nContains the error value\nContains the success value\nThe Read trait allows for reading bytes from a source.\nThe Write trait allows for reading bytes from a source.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRead all bytes until EOF in this source, placing them into …\nRead all bytes until EOF in this source, appending them to …\nAttempts to write an entire buffer into this writer.\nWrites a formatted string into this writer, returning any …\nA 64-bit physical memory address.\nA canonical 64-bit virtual memory address.\nConverts the address to a mutable raw pointer.\nConverts the address to a raw pointer.\nConverts the address to an <code>u64</code>.\nConverts the address to an <code>u64</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a virtual address from the given pointer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether the virtual address has the demanded …\nConvenience method for checking if an address is null.\nConvenience method for checking if an address is null.\nCreates a new canonical virtual address.\nCreates a new physical address.\nCreates a new canonical virtual address, throwing out bits …\nCreates a new physical address, throwing bits 52..64 away.\nCreates a new address, without any checks.\nCreates a new address, without any checks.\nReturns the 9-bit level 1 page table index.\nReturns the 9-bit level 2 page table index.\nReturns the 9-bit level 3 page table index.\nReturns the 9-bit level 4 page table index.\nReturns the 12-bit page offset of this virtual address.\nReturns the 9-bit level page table index.\nTries to create a new canonical virtual address.\nTries to create a new physical address.\nTranslate a virtual memory address to a physical one.\nCreates an address that points to <code>0</code>.\nCreates an address that points to <code>0</code>.\nUnique identifier for a core.\nMaximum number of priorities\nPriority of a task\nUnique identifier for a task (i.e. <code>pid</code>).\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n64-bit inode number\nFilename (null-terminated)\n64-bit offset to next structure\nSize of this dirent\nFile type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInterface to allocate memory from system heap\nSet the current task state to <code>blocked</code>\nSet the current task state to <code>blocked</code>\nFinds the resolution (or precision) of a clock.\nGet the current time of a clock.\nSleep a clock for a specified number of nanoseconds.\nInterface to deallocate a memory region from the system …\nmanipulate file descriptor\nLike <code>synch::futex_wait</code>, but does extra sanity checks and …\nLike <code>synch::futex_wake</code>, but does extra sanity checks.\nDetermine the priority of the current thread\nReturns the number of processors currently online.\nReturns the processor frequency in MHz.\nReturns the base page size, in bytes, of the current …\nGet the system’s clock time.\nThe function computes a sequence of pseudo-random integers …\nFill <code>len</code> bytes in <code>buf</code> with cryptographically secure random …\n<code>read()</code> attempts to read <code>nbyte</code> of data to the object …\nShrink or grow a block of memory to the given <code>new_size</code>. …\nCreate a cryptographicly secure 32bit random number with …\nCreate a cryptographicly secure 64bit random number with …\nDestroy and deallocate a semaphore.\nCreate a new, unnamed semaphore.\nRelease a semaphore.\nTry to acquire a lock on a semaphore.\nTry to acquire a lock on a semaphore.\nSet priority of the current thread\nSet priority of the thread with the identifier <code>id</code>\nThe function sets its argument as the seed for a new …\nWake up the task with the identifier <code>id</code>\n<code>write()</code> attempts to write <code>nbyte</code> of data to the object …\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the amount of time elapsed from an earlier point …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresent the timer interval in seconds and microseconds\nReturns the system time corresponding to “now”.\nRepresent the number of seconds and nanoseconds since the …\nRepresent the number of seconds and microseconds since the …\nnanoseconds\nseconds\nseconds\nmicroseconds")