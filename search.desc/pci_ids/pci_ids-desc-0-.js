searchState.loadedDescShard("pci_ids", 0, "Rust wrappers for the PCI ID Repository.\nRepresents a PCI device class in the PCI database.\nAn abstraction for iterating over all classes in the PCI …\nRepresents a single device in the PCI database.\nA convenience trait for retrieving a top-level entity …\nRepresents a programming interface to a PCI subclass in …\nRepresents an subsystem to a PCI device in the PCI …\nRepresents a PCI device subclass in the PCI database.\nRepresents a PCI device vendor in the PCI database.\nAn abstraction for iterating over all vendors in the PCI …\nReturns a tuple of (class ID, subclass ID) for this …\nReturns a tuple of (vendor ID, device/“product” ID) …\nReturns the <code>Class</code> that this subclass belongs to.\nReturns an iterator over the vendor’s devices.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <code>Subclass</code> corresponding to the given class and …\nReturns the entity corresponding to <code>id</code>, or <code>None</code> if none …\nReturns the <code>Device</code> corresponding to the given vendor and …\nReturns the vendor’s ID.\nReturns the device’s ID.\nReturns the class’ ID.\nReturns the subclass’ ID.\nReturns the programming interface’s ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all vendors in the PCI database.\nReturns an iterator over all classes in the PCI database.\nReturns the vendor’s name.\nReturns the device’s name.\nReturns the subsystem’s name.\nReturns the class’ name.\nReturns the subclass’ name.\nReturns the programming interface’s name.\nReturns an iterator over the subclass’ programming …\nReturns an iterator over the class’ devices.\nReturns the subsystem’s subdevice.\nReturns an iterator over the device’s subsystems.\nReturns the subsystem’s ID.\nReturns the <code>Vendor</code> that this device belongs to.")