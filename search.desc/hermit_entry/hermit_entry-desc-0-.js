searchState.loadedDescShard("hermit_entry", 0, "Hermit’s loading and entry API.\nKernel entry point.\nA Hermit version.\nAn error which can be returned when parsing a <code>HermitVersion</code>…\nCreating and reading <code>RawBootInfo</code> from <code>Entry</code>.\nDefines the current Hermit kernel version in the note …\nDefines the hermit entry version in the note section.\nOffsets and values used to interpret the boot params (“…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe major version of Hermit.\nThe minor version of Hermit.\nThe patch version of Hermit.\nBoot information.\nDevice tree address\nFDT.\nHardware information.\nLinux Boot Parameters.\nLoad information.\nMultiboot.\nPlatform information.\nThe raw boot information struct.\nSerial I/O port.\nThread local storage (TLS) image information.\nUhyve.\n<code>align</code> of the TLS program header.\nAddress of the device tree\n<code>filesz</code> of the TLS program header.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHardware information.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe virtual address range of the loaded kernel image.\nLoad information.\n<code>memsz</code> of the TLS program header.\nThe range of all possible physical memory addresses.\nPlatform information.\nSerial port base address.\nThe start address of the TLS image.\nKernel image TLS information.\nAddress to Linux boot parameters.\nBoot time.\nCommand line passed to the kernel.\nCommand line passed to the kernel.\nCPU frequency in kHz.\nPCI support.\nMultiboot boot information address.\nTotal number of CPUs available.")